target_sources(be PRIVATE
	libnetapi/DynamicBuffer.cpp
	libnetapi/NetEndpoint.cpp
	libnetapi/NetAddress.cpp
	libnetapi/NetBuffer.cpp
	libnetapi/NetDebug.cpp
	libnetapi/SecureSocket.cpp
	libnetapi/HttpAuthentication.cpp
	libnetapi/Certificate.cpp
	libnetapi/Certificate.cpp
	libnetapi/SSL.cpp
	#libnetapi/NetworkAddress.cpp
	#libnetapi/NetworkAddressResolver.cpp
	#libnetapi/NetworkCookie.cpp
	libnetapi/NetworkCookieJar.cpp
	#libnetapi/NetworkDevice.cpp
	#libnetapi/NetworkInterface.cpp
	#libnetapi/NetworkRoster.cpp
	#libnetapi/NetworkRoute.cpp
	libnetapi/NetworkSettings.cpp
	libnetapi/AbstractSocket.cpp
	libnetapi/DatagramSocket.cpp
	libnetapi/ProxySecureSocket.cpp
	libnetapi/SecureSocket.cpp
	libnetapi/Socket.cpp
	libnetapi/SocketMessenger.cpp
	libnetapi/FileRequest.cpp
	libnetapi/GopherRequest.cpp
	libnetapi/DataRequest.cpp
	libnetapi/HttpAuthentication.cpp
	libnetapi/HttpHeaders.cpp
	libnetapi/HttpForm.cpp
	libnetapi/HttpRequest.cpp
	libnetapi/HttpResult.cpp
	libnetapi/HttpTime.cpp
	libnetapi/notifications.cpp
	libnetapi/NetworkRequest.cpp
	libnetapi/UrlContext.cpp
	libnetapi/UrlProtocolAsynchronousListener.cpp
	libnetapi/UrlProtocolDispatchingListener.cpp
	libnetapi/UrlProtocolListener.cpp
	libnetapi/UrlProtocolRoster.cpp
	libnetapi/UrlRequest.cpp
	libnetapi/UrlResult.cpp
	libnetapi/UrlSynchronousRequest.cpp
)
