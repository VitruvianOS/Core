target_include_directories(be PRIVATE
	"./"
	"layouter"
	"textview_support"
)

target_sources(be PRIVATE
	AboutWindow.cpp
	AbstractLayout.cpp
	AbstractLayoutItem.cpp
	AbstractSpinner.cpp
	AffineTransform.cpp
	Alert.cpp
	Alignment.cpp
	Bitmap.cpp
	BMCPrivate.cpp
	Box.cpp
	Button.cpp
	CardLayout.cpp
	CardView.cpp
	ChannelControl.cpp
	ChannelSlider.cpp
	CheckBox.cpp
	ColorControl.cpp
	ColorConversion.cpp
	ColorMenuItem.cpp
	ColumnListView.cpp
	ColumnTypes.cpp
	Control.cpp
	ControlLook.cpp
	DecimalSpinner.cpp
	DecorInfo.cpp
	Deskbar.cpp
	Dragger.cpp
	Font.cpp
	GradientConic.cpp
	Gradient.cpp
	GradientDiamond.cpp
	GradientLinear.cpp
	GradientRadial.cpp
	GradientRadialFocus.cpp
	GraphicsDefs.cpp
	GridLayoutBuilder.cpp
	GridLayout.cpp
	GridView.cpp
	GroupLayoutBuilder.cpp
	GroupLayout.cpp
	GroupView.cpp
	HaikuControlLook.cpp
	Icon.cpp
	Input.cpp
	InterfaceDefs.cpp
	LayoutContext.cpp
	Layout.cpp
	LayoutItem.cpp
	LayoutUtils.cpp
	ListItem.cpp
	ListView.cpp
	MenuBar.cpp
	Menu.cpp
	MenuField.cpp
	MenuItem.cpp
	MenuItemPrivate.cpp
	MenuPrivate.cpp
	MenuWindow.cpp
	OptionControl.cpp
	OptionPopUp.cpp
	OutlineListView.cpp
	PictureButton.cpp
	Picture.cpp
	PictureDataWriter.cpp
	PicturePlayer.cpp
	Point.cpp
	Polygon.cpp
	PopUpMenu.cpp
	PrintJob.cpp
	PrivateScreen.cpp
	RadioButton.cpp
	Rect.cpp
	Region.cpp
	RegionSupport.cpp
	Screen.cpp
	ScrollBar.cpp
	ScrollView.cpp
	SeparatorItem.cpp
	SeparatorView.cpp
	Shape.cpp
	Shelf.cpp
	Size.cpp
	Slider.cpp
	SpaceLayoutItem.cpp
	Spinner.cpp
	SplitLayoutBuilder.cpp
	SplitLayout.cpp
	SplitView.cpp
	StatusBar.cpp
	StringItem.cpp
	StringView.cpp
	TabView.cpp
	TextControl.cpp
	TextInput.cpp
	TextView.cpp
	ToolTip.cpp
	ToolTipManager.cpp
	TwoDimensionalLayout.cpp
	View.cpp
	ViewLayoutItem.cpp
	ViewPort.cpp
	Window.cpp
	WindowStack.cpp
	ZombieReplicantView.cpp

	layouter/CollapsingLayouter.cpp
	layouter/ComplexLayouter.cpp
	layouter/Layouter.cpp
	layouter/LayoutOptimizer.cpp
	layouter/OneElementLayouter.cpp
	layouter/SimpleLayouter.cpp

	textview_support/InlineInput.cpp
	textview_support/LineBuffer.cpp
	textview_support/StyleBuffer.cpp
	textview_support/TextGapBuffer.cpp
	textview_support/UndoBuffer.cpp
	textview_support/WidthBuffer.cpp
)

UsePrivateHeaders(be interface)
