prefix=@prefix@
libdir=${prefix}/lib

CFLAGS = -include build/BeOSBuildCompatibility.h \
-Wall -Wpointer-arith -Wcast-align -Wsign-compare -Wno-multichar \
-c -g -O2 -pipe `cat @top_srcdir@/cosmoe.specs` -fPIC

#TODO remove -fpermissive?
CPPFLAGS = $(CFLAGS) -Woverloaded-virtual -Wno-ctor-dtor-privacy -Wnon-virtual-dtor -fexceptions -fpermissive

LIBNAME = libroot.@LIBEXT@


VPATH += libroot/ libroot/os libroot/posix \
kernel_linux/os kernel_linux/os/fs kernel_linux/os/fs/volume/

#fs_attr.o
LIBROOT_OBJS = libroot_init.o area.o image.o  port.o  sem.o  team.o  thread.o \
fs_query.o  fs_volume.o fs_info.o  fs_index.o find_directory.o \
stat.o parsedate.o

LINUX_KERNEL_OBJS = kernel_area.o kernel_sem.o kernel_port.o kernel_thread.o \
kernel_image.o kernel_watch.o kernel_team.o kernel_missing_imp.o real_time_clock.o \
libc.o system.o atomic.o byteorder.o LinuxVolume.o

LINUX_KERNEL_FS_OBJS = kernel_fs_volume.o kernel_fs_query.o kernel_fs_index.o \
kernel_fs_info.o fs.o fs_attr_untyped.o fs_descriptors.o dir.o


CC = @CC@

OBJS += $(LIBROOT_OBJS)
OBJS += $(LINUX_KERNEL_OBJS)
OBJS += $(LINUX_KERNEL_FS_OBJS)
OBJS += $(LINUX_KERNEL_FS2_OBJS)

OBJDIR	:= @top_srcdir@/objs

include @top_srcdir@/makefile.rules

all :	$(OBJDIR) $(OBJDIR)/$(LIBNAME)

$(OBJDIR):
	mkdir $(OBJDIR)

$(OBJDIR)/$(LIBNAME): $(OBJS)
	$(CC) @SHAREDLINK@ $(OBJS) -I./ -lstdc++ -lm -lpthread -ldl -o $(OBJDIR)/$(LIBNAME)

install: $(OBJDIR)/$(LIBNAME) $(libdir)
	cp -f $< $(libdir)/$(LIBNAME)

uninstall:
	rm -f $(libdir)/$(LIBNAME)

$(libdir):
	mkdir -p $(libdir)

doc:
	-rm -R docs/*
	doxygen libroot.dox

deps: $(OBJDIR) $(DEPS)

clean:
	rm -f $(OBJS) $(OBJDIR)/$(LIBNAME) $(OBJDIR)/*.d *~ */*~ core*
	rm -rf docs/*

distclean: clean
	rm -f Makefile
	rm -rf autom4te.cache

-include $(OBJDIR)/*.d

.PHONY: clean distclean deps doc install uninstall all
